Q1: what is the effect of the keyword "constexpr"?
Ans: constexpr specifies that the value of an object or a function can be evaluated at compile-time and the expression can be used in other constant expressions. 
Q2: what is the the difference between internal and external linkage citing examples from your code?
Ans: In my code external linkage i used as: extern double g_taxrate;
extern double g_discount; In the header file, and I also included inside source files. Because the keyword extern means, we can share a variable between two seperate files and it will be visible and resusable in the other file without throwing redefinition error. While I also used a variable counter as static which means this varible I can onlu use it within this file scope not in other files. The difference between external and internal linkage is simly, A global variable has external linkage by default. Its scope can be extended to files other than containing it by giving a matching extern declaration in the other file. While The scope of a global variable can be restricted to the file containing its declaration by prefixing the declaration with the keyword static. This type of variables are said to have internal linkage.
Q3: what are static variables and how are they useful in your solution.
Ans: The keyword static means the variable is visible inside a function or inside a file but it is not visible in another function or files. I used static varible as: static int counter = 0; which means this variable is only visible in the source file carads.cpp but it will not be visible other files. Static varible is useful when I count how many times a class name or function name has been called whihthin that particualr file scope. 
Q4: the changes that you made in upgrading your Cars class in part 2.
I changed a variable called m_brand as string in order to receive a string within unknown size of characters. I also used getline to get input for the string m_brand, used cin.getline to get input for m_module which is a character array with 15 characters. I used bool operator to get status of the car whether it is new car or old. In global function std::istream& operator>>(std::istream& is, Cars& car), I called car.read and passed the isstream as is as paramater, which will call read function to read data from file. In the other global function: void operator>>(const Cars& car1, Cars& car2), I moved the content of car1 to car2 by calling the assignment operator: Cars& operator=(const Cars& other); which is if two cars are not in the same assdress, move the contents of one car to the other one. 
