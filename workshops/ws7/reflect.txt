// Name:  Reziyemu Sulaiman
// Seneca Student ID: 106-153-208
// Seneca email: rsulaiman2@myseneca.ca
// Date of completion: 2022-11-17
//
// I have done all the coding by myself and only copied the code that my classmate provided to complete my workshops and assignments.

In  this workshop, I was able to use various STL functions. First, I used the vector to store crime structures in the variable m_crimes such as “std::vector<Crime> m_crimes;”. I also need to read the file line by line and save the stored data to the crime structure and add it to the vector. In this process, vectors helped store new crime structures while increasing the size, even though I did not initially set the size. Another sequential container, list, is also used to receive the name of a province as a parameter, and return the list of crimes of that province available in the collection. Obviously, there is a difference between a vector and a list. The way to access elements in containers is different and functions are different. However, in this workshop, I did not significantly use the characteristic of the list such as add and delete elements quickly. If I use the vector or list container, I must include <vector> and <list>. Lastly, I used several functions in <algorithm>. It used a sort algorithm. The reason was to sort the crime by its province, crime, cases, and resolved. The expression of how to sort them I used the Lambda formula. Moreover, I used count_if. "std::count_if(m_crimes.cbegin(), m_crimes.cend(), [=](Crime c)". The reason is to find a number of match if the collection contains any record with that crime. Also, I used the iterator, another STL function. The reason is that I need to count how many crimes mathced. Finally, I used "accumulate" in <numeric>. The reason is that I need to calculate the total cases and the total resolved cases of the entire collection. Also, I used copy_if. "std::copy_if(m_crimes.cbegin(), m_crimes.cend(), temp.begin(), [=](Crime c)". The reason is to find the list of crimes of that province available in the collection. I learned  that copy_if does not automatically increase the size of the container to copy elements, such as push_back. Therefore, to save crime structures to a new list via copy_if, the list must be sized first. However, back_insertor automatically increases the size like push_back, allowing elements to be inserted into the end of the container.

There are several advantages of using the STL algorithm rather than the basic loop function. First, code can be implemented inline. Inline code is legible and neat to look at. This means that it is extremely beneficial for code review and debugging. And if I did not know the STL function, I would have done it by implementing all the functions line by line, such as sort and count_if, but the STL function solves it at once. That is, it adds tremendous productivity to code creation and saves time.
In the process of receiving a file name and instantiating the crimeStatistics class, an error will occur if the file name is incorrect. At this time, it is very important to detect errors. The method that can be used is throw an exception. Try reading the file using the file name through the parameter, and if the filename is incorrect, use throw to  throw an exception.